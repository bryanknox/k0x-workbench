@using K0x.Workbench.DataStorage.Abstractions.Models
@using Microsoft.Extensions.Logging
@using System.Windows
@namespace WpfBlazor.Components
@inject ILogger<ToolView> Logger

<div>

    <span class="bi @expanderIconClass"
        aria-hidden="true"
        style="cursor:pointer"
        @onclick="() => IsExpanded = !IsExpanded">&nbsp;</span>

    <a href="#" @onclick="Execute" @onclick:preventDefault>@Tool.Label</a>

    @if (IsExpanded)
    {
        <span class="text-line indent1">@Tool.Command</span>
        @if (!string.IsNullOrEmpty(Tool.Arguments))
        {
            <span class="text-line indent2">@Tool.Arguments</span>
        }

        @if (!string.IsNullOrEmpty(Tool.WorkingDirectory))
        {
            <span class="text-line indent1">Working Directory: @Tool.WorkingDirectory</span>
        }
    }
</div>

@code {
    [Parameter]
    public Tool Tool { get; set; } = default!;

    private bool IsExpanded { get; set; } = false;

    private string expanderIconClass => IsExpanded ? "bi-caret-down" : "bi-caret-right";

    private void Execute(MouseEventArgs e)
    {
        var psi = new System.Diagnostics.ProcessStartInfo
        {
            FileName = Tool.Command,
            Arguments = Tool.Arguments,
            WorkingDirectory = Tool.WorkingDirectory,
            ErrorDialog = true,
            UseShellExecute = true,
        };
        try
        {
            System.Diagnostics.Process.Start(psi);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, $"Error executing tool: {Tool.Label}");

            MessageBox.Show(
                $"Error executing tool: {Tool.Label}\n"
                + $"{ex.GetType()}\n"
                + "\n"
                + $"{ex.Message}\n",
                caption: $"Error executing tool: {Tool.Label}",
                button: MessageBoxButton.OK,
                icon: MessageBoxImage.Error);
        }
    }
}
